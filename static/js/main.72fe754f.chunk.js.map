{"version":3,"sources":["MovieNav.js","Movie.js","RenderMovies.js","Search.js","Filter.js","App.js","index.js"],"names":["NavBar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Header","_Component2","id","renderError","err","message","Movie","props","_this","call","handleChildClick","bind","assertThisInitialized","state","movie","undefined","load","temp","show","movieTemplate","cardId","movieId","fetch","catch","then","response","json","movieName","url","replace","imdb_id","Response","Error","_this2","setState","e","onClick","aria-label","alt","Title","src","Poster","Actors","Released","Rated","imdbRating","Metascore","Director","Country","Language","Awards","Runtime","Genre","Plot","RenderMovies","movies","data","movieCards","results","map","RenderMovies_MovieCard","MovieCard","handleClick","preventDefault","selected","src_Movie","poster_path","title","overview","Search","handleSubmit","handleChange","search","evt","target","searchURL","res","updateResults","alert","onSubmit","onChange","type","placeholder","Filter","handleChangeGenre","handleChangeAdult","handleChangeRadio","genre","adult","sort","console","log","apiKey","baseURL","reactstrap_es","for","check","tag","name","defaultChecked","App","resp","MovieNav_NavBar","MovieNav_Header","src_Search","src_Filter","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.72fe754f.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'; //import React Component\r\n\r\n// export class MovieNav extends Component {\r\n//     render() {\r\n//         return (\r\n//           <nav className=\"navbar navbar-toggleable-lg navbar-inverse bg-inverse\">\r\n//             <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                 <span class=\"navbar-toggler-icon\"></span>\r\n//             </button>\r\n//             <a className=\"navbar-brand\" href=\"#\">Home</a>\r\n//             <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n//               <ul className=\"navbar-nav mr-auto\">\r\n//                 <li className=\"nav-item active\">\r\n//                   <a className=\"nav-link\" href=\"\">About Us</a>\r\n//                 </li>\r\n//                 <li>\r\n//                 <a className=\"nav-link\" href=\"\">Contact Us</a>\r\n//                 </li> \r\n//               </ul>\r\n//             </div>\r\n//           </nav>  \r\n//         );\r\n//       }\r\n// }\r\n\r\nexport class NavBar extends Component {\r\n    //links to other html pages, not implemented yet, will be implemented\r\n    // when we do component-routing\r\n    render() {\r\n      return (\r\n        <div className=\"nav\">\r\n          <div className=\"nav-header\">\r\n            <div className=\"nav-title\">Movie Browser</div>\r\n          </div>\r\n  \r\n          {/* <div className=\"nav-btn\">\r\n            <label className=\"nav-check\" for=\"click to show contents of navabar\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </label>\r\n          </div>\r\n  \r\n          <input type=\"checkbox\" id=\"nav-check\" />\r\n  \r\n          <div className=\"nav-links\"> \r\n            <a href=\"#\" aria-label='click to get to home page'>Home</a>\r\n            <a href=\"#\" aria-label='click to know about us'>About Us</a>\r\n            <a href=\"#\" araa-label='click to contact us'>Contact Us</a>\r\n          </div> */}\r\n  \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export class Header extends Component {\r\n    // header jumbotron\r\n    render() {\r\n      return(\r\n        <header>\r\n           <div className=\"jumbotron\">\r\n              <h1 id = \"header\">Movies</h1>\r\n           </div>\r\n        </header>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nfunction renderError(err){\r\n    // request has an error \r\n    return(<p>{err.message}</p>);\r\n  }\r\n  \r\n  function apiError(err){\r\n  // api returns an error despite it going through\r\n    return(<p>{err}</p>);\r\n  }\r\n  \r\n  \r\n\r\nclass Movie extends Component {\r\n// Creates new content for the card from IMDB's database, and allows it to flipped back to the original\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChildClick = this.handleChildClick.bind(this);\r\n        this.state = {movie: undefined,load:false,temp:undefined,show:true};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const movieTemplate = 'https://www.omdbapi.com/?apikey=ae5cb563&r=json&type=movie&i={name}';\r\n        let cardId = this.props.movieId;\r\n        // let cardId = 338952;\r\n        let movieName = await fetch(\"https://api.themoviedb.org/3/movie/\" + cardId + \"?api_key=5998a49a96a6ec70146d23cc8f3193eb\")\r\n            .catch(renderError)\r\n            .then(function(response) {return response.json()})\r\n        //loaded imdbID  \r\n        let url = movieTemplate.replace(\"{name}\",movieName.imdb_id);\r\n        let iter = fetch(url).then(function(response){\r\n            return response.json();\r\n        }).catch(function(err){\r\n            renderError(err);\r\n        }).then(function(response){\r\n        if(response.Response ==='False'){\r\n            apiError(response.Error)\r\n        }else{\r\n            return response;\r\n        }\r\n        }).then(function(response){\r\n            return response;\r\n        });\r\n        //loaded imdb information from omdb\r\n        iter.then(response =>this.setState({movie:response})).then(()=>this.setState({load:true}));\r\n\r\n    }\r\n    handleChildClick(e){\r\n        //calls back up to parent\r\n        this.props.handleChildClick(e);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.load){\r\n            return (\r\n                <div onClick={this.handleChildClick} aria-label='click card to view general details'>\r\n                    <img alt= {'Poster of {title}'.replace('{title}',this.state.movie.Title)}  src={this.state.movie.Poster}/>\r\n                    <h4>    {this.state.movie.Title}</h4>\r\n                    <p>\r\n                        Actors: {this.state.movie.Actors} <br></br>\r\n                        Released: {this.state.movie.Released}<br></br>\r\n                        Rated: {this.state.movie.Rated}<br></br>\r\n                        IMDB/Metacritic: {this.state.movie.imdbRating}/{this.state.movie.Metascore}<br></br>\r\n                        Director: {this.state.movie.Director}<br></br>\r\n                        Country(Language): {this.state.movie.Country}{this.state.movie.Language}<br></br>\r\n                        Awards: {this.state.movie.Awards}<br></br>\r\n                        Runtime: {this.state.movie.Runtime}<br></br>\r\n                        Genre: {this.state.movie.Genre}<br></br>\r\n                        Plot: {this.state.movie.Plot}\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else{\r\n            return ( \r\n                <div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <p>Not Loaded Yet</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Movie from './Movie.js';\r\n\r\nclass RenderMovieList extends Component {\r\n    //renders all the movies given by either the initial creation or search/filter\r\n    //props required are the response from tmdb\r\n    render() {\r\n      let movies = this.props.data || undefined;\r\n      //maps all movies to cards\r\n      if(movies != undefined){\r\n        movies=movies.results;\r\n        let movieCards = movies.map((movie)=> {\r\n          return <MovieCard key={movie.id} movie={movie} />\r\n        })\r\n        return(\r\n          <div className='container'>\r\n            <div className='row'> \r\n              {movieCards}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return(<p>no current results</p>);\r\n    }\r\n  }\r\n  export default RenderMovieList;\r\n  class MovieCard extends Component {\r\n    //creates a card for the movie, that flips to reveal more detailed information\r\n    //requires a movie object prop in tmdb format\r\n    constructor(props){\r\n      super(props);\r\n      this.handleChildClick = this.handleChildClick.bind(this);\r\n      this.state = {selected:false};\r\n    }\r\n  \r\n    handleClick = (e) => {\r\n      e.preventDefault();\r\n      this.setState({selected:true})\r\n    }\r\n  \r\n    handleChildClick(e) {\r\n      this.setState({selected:false});\r\n    }\r\n    render(){\r\n      let movie = this.props.movie;\r\n      if(this.state.selected){\r\n        return(\r\n          <div className='card col-md-4'>\r\n            <Movie movieId={movie.id} handleChildClick={this.handleChildClick} aria-label=\"click card to see details\"/>\r\n          </div>\r\n        );\r\n      }\r\n      return(\r\n        <div className='card col-md-4' onClick={this.handleClick} aria-label='click on this card for more detailed information'>\r\n          <img className='card-img-top' alt='Poster of movie' src = {'http://image.tmdb.org/t/p/w185/{path}'.replace('{path}',movie.poster_path)}/>\r\n          <div className='card-block'>  \r\n            <h4 className='card-title'>\r\n            {movie.title}\r\n            </h4>\r\n            <p className='card-text'>\r\n              {movie.overview}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Search extends Component {\r\n    // Passes back up the resulting movie list from a search of tmdb.\r\n    // Doesn't integrate with filter\r\n    // props required: callback function to get results\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state={search:''};\r\n    }\r\n    \r\n    handleChange(evt){\r\n      this.setState({search:evt.target.value});\r\n    }\r\n  \r\n    handleSubmit(evt) {\r\n      evt.preventDefault();\r\n      const apiKey = \"5998a49a96a6ec70146d23cc8f3193eb\";\r\n      const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=\";\r\n      fetch(searchURL + apiKey +  \"&language=en-US&query=\" + this.state.search)\r\n        .then((res) => res.json())\r\n        .then((data) => this.props.updateResults(data)) //parent callback function\r\n        .catch((err) => alert(err.message));\r\n    }\r\n  \r\n  \r\n    // input form\r\n    render() {\r\n      return(\r\n        <section className=\"pb-4\">\r\n           <div className=\"container\">\r\n              <form id=\"search-form\" onSubmit = {this.handleSubmit} aria-label='search bar for movie names and press enter to search'>\r\n                 <input value={this.state.search} onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Search for any movie! (Type full name)\" />\r\n              </form>\r\n           </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n  export default Search;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Form, FormGroup, Label, Input,Button} from 'reactstrap';\r\n\r\nclass Filter extends Component {\r\n    // Does a filter of all results \r\n    // Doesn't integreate with search\r\n    // Requires a callback prop to pass up results\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChangeGenre = this.handleChangeGenre.bind(this);\r\n      this.handleChangeAdult = this.handleChangeAdult.bind(this);\r\n      this.handleChangeRadio = this.handleChangeRadio.bind(this);\r\n      this.updateResults = this.updateResults.bind(this);\r\n      this.state = {\r\n        genre: '',\r\n        adult: false,\r\n        sort: 'popularity.desc'\r\n      };\r\n    }\r\n  \r\n    handleChangeGenre(evt) {\r\n        // evt.preventDefault();\r\n        this.setState({genre: evt.target.value});\r\n        // this.updateResults();\r\n      }\r\n  \r\n    handleChangeAdult(evt) {\r\n        // evt.preventDefault();\r\n        if(this.state.adult){\r\n            this.setState({adult: true});\r\n        }else{\r\n            this.setState({adult: false});\r\n        }\r\n        // this.updateResults();\r\n      }\r\n    handleChangeRadio(evt) {\r\n    //   evt.preventDefault();\r\n      this.setState({sort: evt.target.id});\r\n    //   this.updateResults();\r\n    }\r\n  \r\n    updateResults() {\r\n        console.log(this.state);\r\n        \r\n      const apiKey = \"5998a49a96a6ec70146d23cc8f3193eb\";\r\n      const baseURL = \"https://api.themoviedb.org/3/discover/movie?api_key=\";\r\n      if(this.state.genre != ''){\r\n        let url = baseURL + apiKey + \"&language=en-US&sort_by=\" + this.state.sort + \"&include_adult=\" + this.state.adult + \"&with_genres=\" + this.state.genre;\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((data) => this.props.updateResults(data)) //parent callback function\r\n            .catch((err) => alert(err.message));\r\n      }else{\r\n        let url = baseURL + apiKey + \"&language=en-US&sort_by=\" + this.state.sort + \"&include_adult=\" + this.state.adult + \"&with_genres=\" + this.state.genre;\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => this.props.updateResults(data)) //parent callback function\r\n          .catch((err) => alert(err.message));\r\n      }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.updateResults();\r\n    }\r\n    render() {\r\n      return(\r\n        <div id=\"filter\">\r\n          <Form>\r\n            <Label for=\"exampleSelect\"><legend>Genre:</legend></Label>\r\n              <select value={this.state.genre} onChange={this.handleChangeGenre} aria-label='select genre to filter by'>\r\n                <option  value =\"\">All</option>\r\n                <option  value=\"28\" >Action</option>\r\n                <option  value=\"12\">Adventure</option>\r\n                <option  value=\"16\">Animation</option>\r\n                <option  value=\"35\">Comedy</option>\r\n                <option  value=\"80\">Crime</option>\r\n                <option  value=\"99\">Documentary</option>\r\n                <option  value=\"18\">Drama</option>\r\n                <option  value=\"10751\">Family</option>\r\n                <option  value=\"14\">Fantasy</option>\r\n                <option  value=\"36\">History</option>\r\n                <option  value=\"27\">Horror</option>\r\n                <option  value=\"10402\">Music</option>\r\n                <option  value=\"9648\">Mystery</option>\r\n                <option  value=\"10749\">Romance</option>\r\n                <option  value=\"53\">Thriller</option>\r\n                <option  value=\"10752\">War</option>\r\n                <option  value=\"37\">Western</option>\r\n                </select>\r\n            <br />\r\n            <br />\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" onChange={this.handleChangeAdult} aria-label='checkbox to include adult movies'/>\r\n                Include adult movies?\r\n              </Label>\r\n            </FormGroup>\r\n            <br />\r\n            <br />\r\n            <FormGroup tag=\"fieldset\">\r\n              <legend>Sort by:</legend>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio\" onChange={this.handleChangeRadio} \r\n                  id=\"popularity.desc\" defaultChecked aria-label='radio button to order movies in descending order by popularity'/>{' '}\r\n                  Most Popular to Least Popular\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio\" onChange={this.handleChangeRadio} id=\"vote_count.desc\"\r\n                  aria-label='radio button to order movies in descending order by votes'/>{' '}\r\n                  Highest Vote Count to Lowest Vote Count\r\n                </Label>\r\n              </FormGroup>\r\n            </FormGroup>\r\n           \r\n          </Form>\r\n          <Button  onClick={this.updateResults} aria-label='submits filter selections'>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default Filter;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nimport 'whatwg-fetch';\r\nimport {NavBar, Header} from './MovieNav.js';\r\nimport RenderMovieList from './RenderMovies.js';\r\nimport Search from './Search.js';\r\nimport Filter from './Filter.js';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateResults = this.updateResults.bind(this);\r\n    this.state = {\r\n      movies:undefined //tmdb response of movies\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiKey = \"5998a49a96a6ec70146d23cc8f3193eb\";\r\n    const baseURL = \"https://api.themoviedb.org/3/discover/movie?api_key=\";\r\n    fetch(baseURL + apiKey)\r\n    .then((response) => response.json())\r\n    .then((response) => this.setState({movies:response}))\r\n    .catch(err => err.message);\r\n  \r\n  }\r\n  updateResults(resp) {\r\n    this.setState({movies:resp});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <Header /> \r\n        <Search  updateResults={this.updateResults}/>\r\n        <div id='display'>\r\n          <RenderMovieList data={this.state.movies}/> \r\n          <Filter updateResults={this.updateResults}/>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}